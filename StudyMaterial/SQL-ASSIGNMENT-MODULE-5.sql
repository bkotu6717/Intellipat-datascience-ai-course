
Create database SQL_Optimization_And_Performance
use SQL_Optimization_And_Performance

create table studies
(
PNAME VARCHAR(30) NOT NULL PRIMARY KEY,
INSTITUTE VARCHAR(20),
COURSE VARCHAR(20),
COURSE_FEE INT
)
INSERT INTO studies VALUES
('ANAND','SABHARI','PGDCA',4500),
('ALTAF','COIT','DCA',7200),
('JULIANA','BDPS','MCA',22000),
('KAMALA','PRAGATHI','DCA',5000),
('MARY','SABHARI','PGDCA',4500),
('NELSON','PRAGATHI','DAP',6200),
('PATRICK','PRAGATHI','DCAP',5200),
('QADIR','APPLE','HDCA',14000),
('RAMESH','SABHARI','PGDCA',4500),
('REBECCA','BRILLIANT','DCAP',11000),
('REMITHA','BDPS','DCS',6000),
('REVATHI','SABHARI','DAP',5000),
('VIJAYA','BDPS','DCA',48000)
SELECT * FROM studies

create table SOFTWARE
(
PNAME VARCHAR(30),
TITLE VARCHAR(30),
DEVELOPIN VARCHAR(20),
SCOST DECIMAL(8,2),
DCOST DECIMAL(8,2),
SOLD INT
)

INSERT INTO SOFTWARE VALUES
('MARY','README','CPP',300.00,1200.00,84),
('ANAND','PARACHUTES','BASIC',399.95,6000.00,43),
('ANAND','VIDEO TITLING ','PASCAL',7500.00,16000.00,9),
('JULIANA','INVENTORY','COBOL',3000.00,3500.00,0),
('KAMALA','PAYROLL PKG','DBASE',9000.00,20000.00,7),
('MARY','FINANCIAL ACCT','ORACLE',18000.00,85000.00,4),
('MARY','CODE GENERATOR ','C',4500.00,20000.00,23),
('PATTRICK','README','CPP',300.00,1200.00,84),
('MARY','README','CPP',300.00,1200.00,84),
('PATTRICK','README','CPP',300.00,1200.00,84),
('QADIR','BOMBS AWAY ','ASSEMBLY',750.00,3000.00,11),
('QADIR','VACCINES','C',1900.00,3100.00,21),
('RAMESH','HOTEL MGMT ','DBASE',13000.00,35000.00,4),
('RAMESH','DEAD LEE','PASCAL',599.95,4500.00,73),
('REMITHA','PC UTILITIES','C',725.00,5000.00,51),
('REMITHA','TSR HELP PKG','ASSEMBLY',2500.00,6000.00,7),
('REVATHI','HOSPITAL MGMT','PASCAL',1100.00,75000.00,2),
('VIJAYA','TSR EDITOR','C',900.00,700.00,6)

create table PROGRAMMER
(
PNAME VARCHAR(30),
DOB DATE,
DOJ DATE,
GENDER VARCHAR(6),
PROF1 VARCHAR(20),
PROF2 VARCHAR(20),
SALARY DECIMAL(7,2)
)

INSERT INTO PROGRAMMER VALUES
('ANAND','2-Apr-66 ','21-Apr-92','M','PASCAL','BASIC',3200.00),
('ALTAF','02-Jul-64 ','13-Nov-90 ','M','CLIPPER','COBOL',2800.00),
('JULIANA','31-Jan-60 ','21-Apr-90 ','F','COBOL','DBASE',3000.00),
('KAMALA','30-Oct-68','02-Jan-92  ','F','C','DBASE',2900.00),
('MARY','24-Jun-70  ','01-Feb-91 ','F','CPP','ORACLE',4500.00),
('NELSON','11-Sep-85 ','11-Oct-89 ','M','COBOL','DBASE',2500.00),
('PATTRICK','10-Nov-65 ','21-Apr-90','M','PASCAL','CLIPPER',2800.00),
('QADIR','31-Aug-65',' 21-Apr-91 ','M','ASSEMBLY','C',3000.00),
('RAMESH','03-May-67 ','28-Feb-91 ','M','PASCAL','DBASE',3200.00),
('REBECCA','01-Jan-67  ','01-Dec-90 ','F','BASIC','COBOL',2500.00),
('REMITHA','19-Apr-70 ','20-Apr-93 ','F','C','ASSEMBLY',3600.00),
('REVATHI','02-Dec-69 ','02-Jan-92 ','F','PASCAL','BASIC',3700.00),
('VIJAYA','14-Dec-65','02-May-92','F','FOXPRO','C',3500.00)

-- 1. Display the names of the highest paid programmers for each Language.

    WITH CTE AS (
    SELECT PNAME, SALARY, PROF1 PROF FROM programmer
    UNION 
    SELECT PNAME, SALARY, PROF2 PROF FROM programmer
    )
    SELECT P1.PNAME, P1.PROF, P1.SALARY
    FROM CTE P1
    LEFT JOIN CTE P2
    ON P1.PROF = P2.PROF AND P1.SALARY < P2.SALARY
    WHERE P2.PNAME IS NULL;

-- 2. Display the details of those who are drawing the same salary.
    SELECT STRING_AGG(P.PNAME, ', '), P.SALARY FROM PROGRAMMER P
    WHERE P.SALARY IN (SELECT DISTINCT SALARY FROM PROGRAMMER)
    GROUP BY SALARY

-- 3. Who are the programmers who joined on the same day?
    SELECT STRING_AGG(P.PNAME, ', ') AS PROGRAMMERS, P.DOJ FROM PROGRAMMER P
    WHERE P.DOJ IN (SELECT DISTINCT DOJ FROM PROGRAMMER)
    GROUP BY P.DOJ

-- 4. Who are the programmers who have the same Prof2?
    SELECT PNAME FROM PROGRAMMER WHERE PROF1 = PROF2

-- 5. How many packages were developed by the person who developed the cheapest package, where did he/she study?
    WITH CTE AS
    (SELECT S.PNAME, COUNT(*) AS CHEAPEST_PACKAGES_DEVELOPED FROM SOFTWARE S
    WHERE S.DCOST = (SELECT MIN(DCOST) FROM SOFTWARE)
    GROUP BY S.PNAME)
    SELECT CTE.PNAME, ST.INSTITUTE, CTE.CHEAPEST_PACKAGES_DEVELOPED FROM CTE
    INNER JOIN studies ST ON ST.PNAME = CTE.PNAME;
