CREATE DATABASE May28Session
use May28Session

CREATE TABLE LOCATION(
    id INTEGER PRIMARY KEY,
    city VARCHAR(30)
)

insert into [LOCATION] VALUES
(122, 'NewYork'),
(123, 'Dallas'),
(124, 'Chicago'),
(167, 'Boston')

SELECT * from [LOCATION];


CREATE TABLE department(
    id INTEGER PRIMARY KEY,
    name VARCHAR(100),
    location_id INTEGER REFERENCES LOCATION(id)
)


INSERT INTO department VALUES
(10, 'Accounting', 122),
(20, 'Sales', 123),
(30, 'Research', 124),
(40, 'Operations', 167)

select * from department;

CREATE TABLE job(
    id INTEGER PRIMARY KEY,
    designation VARCHAR(100)
)

insert into job VALUES
(667,'Clerk'),
(668,'Staff'),
(669,'Analyst'),
(670,'SalesPerson'),
(671,'Manager'),
(672,'Specialist');

SELECT * FROM job;

drop table employee;
CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID INT, LAST_NAME VARCHAR(50), 
    FIRST_NAME VARCHAR(50), 
    MIDDLE_NAME VARCHAR(50),
    EMPJOB_ID INT FOREIGN KEY REFERENCES JOB(id), 
    MANAGER_ID INT, 
    HIRE_DATE DATE, 
    SALARY INT, 
    COMM INT,
    EMP_LOCATION_ID INTEGER FOREIGN KEY REFERENCES LOCATION(id),
    EMP_DEPARTMENT_ID INT FOREIGN KEY REFERENCES DEPARTMENT(id)
)

INSERT INTO EMPLOYEE VALUES
(7369, 'SMITH','JOHN','Q',667,NULL,'17-DEC-84',800,NULL,122,20),
(7499, 'ALLEN','KEVIN','J',670,7369,'20-FEB-85',1600,300,123,30),
(7505, 'DOYLE','JEAN','K',671,7499,'4-APR-85',2850,NULL,124,30),
(7506, 'DENNIS','LYNN','S',671,7505,'15-MAY-85',2750,NULL,167,30),
(7507, 'BAKER','LESLIE','D',671,7507,'10-JUN-85',2200,NULL,122,40),
(7521, 'WARK','CYNTHIA','D',670,7369,'22-FEB-85',1250,500,123,30);



-- JOINS
-- 1. LIST OUT EMPLOYEES WITH THEIR DEPARTMENT NAMES.
    SELECT E.FIRST_NAME as EMP_NAME, DEP.NAME AS DEP_NAME FROM EMPLOYEE E INNER JOIN department DEP ON E.EMP_DEPARTMENT_ID = DEP.id

-- 2. DISPLAY EMPLOYEES WITH THEIR DESIGNATIONS.
    SELECT E.FIRST_NAME as EMP_NAME, J.DESIGNATION AS DESIGNATION FROM EMPLOYEE E INNER JOIN job J ON E.EMPJOB_ID = J.id

-- 3. DISPLAY THE EMPLOYEES WITH THEIR DEPARTMENT NAMES AND REGIONAL GROUPS.
    SELECT E.FIRST_NAME as EMP_NAME, J.DESIGNATION AS DESIGNATION, L.city as [Reginal Group] FROM EMPLOYEE E 
    INNER JOIN job J ON E.EMPJOB_ID = J.id
    INNER JOIN [LOCATION] L on E.EMP_LOCATION_ID = L.id

-- 4. HOW MANY EMPLOYEES WHO ARE WORKING IN DIFFERENT DEPARTMENTS AND DISPLAY WITH DEPARTMENT NAMES.
    SELECT DEP.NAME AS DEP_NAME, COUNT(*) as EMP_COUNT FROM EMPLOYEE E INNER JOIN department DEP ON E.EMP_DEPARTMENT_ID = DEP.id
    GROUP BY E.EMP_DEPARTMENT_ID, DEP.name;

-- 5. HOW MANY EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT.
    SELECT DEP.NAME AS DEP_NAME, COUNT(*) as EMP_COUNT FROM EMPLOYEE E
    INNER JOIN department DEP ON E.EMP_DEPARTMENT_ID = DEP.id
    WHERE E.EMP_DEPARTMENT_ID = 20
    GROUP BY E.EMP_DEPARTMENT_ID, DEP.name;

-- 6. WHICH IS THE DEPARTMENT HAVING GREATER THAN OR EQUAL TO 5 EMPLOYEES AND DISPLAY THE DEPARTMENT NAMES IN ASCENDING ORDER.
    SELECT DEP.NAME AS DEP_NAME, COUNT(*) as EMP_COUNT FROM EMPLOYEE E
    INNER JOIN department DEP ON E.EMP_DEPARTMENT_ID = DEP.id
    GROUP BY E.EMP_DEPARTMENT_ID, DEP.name
    HAVING COUNT(*) > 1
    ORDER BY COUNT(*) ASC;
-- 7. HOW MANY JOBS IN THE ORGANIZATION WITH DESIGNATIONS.
    SELECT COUNT(*) as [HAVING DESIGNATION] FROM EMPLOYEE E
    INNER JOIN job J ON E.EMPJOB_ID = J.id 
    WHERE J.designation IS NOT NULL;

-- 8. HOW MANY EMPLOYEES ARE WORKING IN "NEW YORK".
    SELECT * from [LOCATION];
    SELECT * FROM department;
    SELECT * FROM EMPLOYEE;

    SELECT COUNT(*) [NEW YORK EMPLOYEES] FROM EMPLOYEE E 
    INNER JOIN department D on E.EMP_DEPARTMENT_ID = D.id
    INNER JOIN [LOCATION] L ON D.location_id = L.id
    WHERE L.id = 122


-- 9. DISPLAY THE EMPLOYEE DETAILS WITH SALARY GRADES.
    CREATE TABLE GRADES(
        id INT PRIMARY KEY,
        grade INTEGER,
        min_sal DECIMAL(10,2),
        max_sal DECIMAL(10,2)
    )
    INSERT INTO GRADES VALUES 
    (1, 1, 800, 1300),
    (2, 2, 1301, 1500),
    (3, 3, 1501, 2100),
    (4, 4, 2101, 3100)

    SELECT FIRST_NAME, SALARY FROM EMPLOYEE
    SELECT * FROM GRADES

    SELECT E.FIRST_NAME, E.SALARY, G.GRADE FROM EMPLOYEE E, GRADES G
    WHERE SALARY BETWEEN G.min_sal AND G.max_sal;

-- 10. LIST OUT THE NO. OF EMPLOYEES ON GRADE WISE.

    SELECT E.FIRST_NAME, E.SALARY, G.GRADE FROM EMPLOYEE E, GRADES G
    WHERE SALARY BETWEEN G.min_sal AND G.max_sal;

    SELECT G.grade AS [EMP_GRADE], COUNT(*) AS [EMP_COUNT] FROM EMPLOYEE E, GRADES G
    WHERE (SALARY BETWEEN G.min_sal AND G.max_sal)
    GROUP BY G.grade;

-- 11. DISPLAY THE EMPLOYEE SALARY GRADES AND NO. OF EMPLOYEES BETWEEN 2000 TO 5000 RANGE OF SALARY.
    SELECT E.FIRST_NAME, G.grade AS [EMP_GRADE], COUNT(*) AS [EMP_COUNT] FROM EMPLOYEE E, GRADES G
    WHERE E.SALARY BETWEEN 2000 AND 5000
    WHERE (SALARY BETWEEN G.min_sal AND G.max_sal)
    GROUP BY G.grade;
-- 12. DISPLAY THE EMPLOYEE DETAILS WITH THEIR MANAGER NAMES.
    SELECT * FROM EMPLOYEE;

    SELECT M.FIRST_NAME AS [MANAGER], E.FIRST_NAME AS [SUBORIDNATE] FROM EMPLOYEE E 
    INNER JOIN EMPLOYEE M ON E.MANAGER_ID = M.EMPLOYEE_ID;

-- 13. DISPLAY THE EMPLOYEE DETAILS WHO EARN MORE THAN THEIR MANAGERS SALARIES.
    SELECT M.FIRST_NAME AS [MANAGER], M.SALARY AS [M_SALARY], E.FIRST_NAME AS [SUBORIDNATE], E.SALARY AS [SUBORIDNATE_SALARY] FROM EMPLOYEE E 
    INNER JOIN EMPLOYEE M ON E.MANAGER_ID = M.EMPLOYEE_ID
    WHERE E.SALARY > M.SALARY;
-- 14. SHOW THE NO. OF EMPLOYEES WORKING UNDER EVERY MANAGER.

    SELECT * FROM EMPLOYEE;
    SELECT * FROM department;

    SELECT E.MANAGER_ID, COUNT(*) AS [TOTAL_REPORTING_EMPS] FROM EMPLOYEE E
    WHERE MANAGER_ID IS NOT NULL
    GROUP BY E.MANAGER_ID

-- 15. DISPLAY EMPLOYEE DETAILS WITH THEIR MANAGER NAMES.

    SELECT M.FIRST_NAME AS [MANAGER], E.FIRST_NAME AS [SUBORIDNATE] FROM EMPLOYEE E 
    INNER JOIN EMPLOYEE M ON E.MANAGER_ID = M.EMPLOYEE_ID;
-- 16. DISPLAY ALL EMPLOYEES IN SALES OR OPERATION DEPARTMENTS.
    SELECT E.FIRST_NAME [EMP_NAME], D.NAME [DEPT] FROM EMPLOYEE E
    INNER JOIN department D ON E.EMP_DEPARTMENT_ID = D.id
    WHERE D.name IN ('Sales', 'Operations')
