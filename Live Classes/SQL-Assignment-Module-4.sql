Create database SQL_Optimization_And_Performance
use SQL_Optimization_And_Performance

create table studies
(
PNAME VARCHAR(30) NOT NULL PRIMARY KEY,
INSTITUTE VARCHAR(20),
COURSE VARCHAR(20),
COURSE_FEE INT
)
INSERT INTO studies VALUES
('ANAND','SABHARI','PGDCA',4500),
('ALTAF','COIT','DCA',7200),
('JULIANA','BDPS','MCA',22000),
('KAMALA','PRAGATHI','DCA',5000),
('MARY','SABHARI','PGDCA',4500),
('NELSON','PRAGATHI','DAP',6200),
('PATRICK','PRAGATHI','DCAP',5200),
('QADIR','APPLE','HDCA',14000),
('RAMESH','SABHARI','PGDCA',4500),
('REBECCA','BRILLIANT','DCAP',11000),
('REMITHA','BDPS','DCS',6000),
('REVATHI','SABHARI','DAP',5000),
('VIJAYA','BDPS','DCA',48000)
SELECT * FROM studies

create table SOFTWARE
(
PNAME VARCHAR(30),
TITLE VARCHAR(30),
DEVELOPIN VARCHAR(20),
SCOST DECIMAL(8,2),
DCOST DECIMAL(8,2),
SOLD INT
)

INSERT INTO SOFTWARE VALUES
('MARY','README','CPP',300.00,1200.00,84),
('ANAND','PARACHUTES','BASIC',399.95,6000.00,43),
('ANAND','VIDEO TITLING ','PASCAL',7500.00,16000.00,9),
('JULIANA','INVENTORY','COBOL',3000.00,3500.00,0),
('KAMALA','PAYROLL PKG','DBASE',9000.00,20000.00,7),
('MARY','FINANCIAL ACCT','ORACLE',18000.00,85000.00,4),
('MARY','CODE GENERATOR ','C',4500.00,20000.00,23),
('PATTRICK','README','CPP',300.00,1200.00,84),
('MARY','README','CPP',300.00,1200.00,84),
('PATTRICK','README','CPP',300.00,1200.00,84),
('QADIR','BOMBS AWAY ','ASSEMBLY',750.00,3000.00,11),
('QADIR','VACCINES','C',1900.00,3100.00,21),
('RAMESH','HOTEL MGMT ','DBASE',13000.00,35000.00,4),
('RAMESH','DEAD LEE','PASCAL',599.95,4500.00,73),
('REMITHA','PC UTILITIES','C',725.00,5000.00,51),
('REMITHA','TSR HELP PKG','ASSEMBLY',2500.00,6000.00,7),
('REVATHI','HOSPITAL MGMT','PASCAL',1100.00,75000.00,2),
('VIJAYA','TSR EDITOR','C',900.00,700.00,6)

create table PROGRAMMER
(
PNAME VARCHAR(30),
DOB DATE,
DOJ DATE,
GENDER VARCHAR(6),
PROF1 VARCHAR(20),
PROF2 VARCHAR(20),
SALARY DECIMAL(7,2)
)

INSERT INTO PROGRAMMER VALUES
('ANAND','2-Apr-66 ','21-Apr-92','M','PASCAL','BASIC',3200.00),
('ALTAF','02-Jul-64 ','13-Nov-90 ','M','CLIPPER','COBOL',2800.00),
('JULIANA','31-Jan-60 ','21-Apr-90 ','F','COBOL','DBASE',3000.00),
('KAMALA','30-Oct-68','02-Jan-92  ','F','C','DBASE',2900.00),
('MARY','24-Jun-70  ','01-Feb-91 ','F','CPP','ORACLE',4500.00),
('NELSON','11-Sep-85 ','11-Oct-89 ','M','COBOL','DBASE',2500.00),
('PATTRICK','10-Nov-65 ','21-Apr-90','M','PASCAL','CLIPPER',2800.00),
('QADIR','31-Aug-65',' 21-Apr-91 ','M','ASSEMBLY','C',3000.00),
('RAMESH','03-May-67 ','28-Feb-91 ','M','PASCAL','DBASE',3200.00),
('REBECCA','01-Jan-67  ','01-Dec-90 ','F','BASIC','COBOL',2500.00),
('REMITHA','19-Apr-70 ','20-Apr-93 ','F','C','ASSEMBLY',3600.00),
('REVATHI','02-Dec-69 ','02-Jan-92 ','F','PASCAL','BASIC',3700.00),
('VIJAYA','14-Dec-65','02-May-92','F','FOXPRO','C',3500.00)

-- 1. What is the cost of the costliest software development in Basic?
    SELECT TOP 1 TITLE FROM SOFTWARE ORDER BY DCOST DESC;

-- 2. Display details of Packages whose sales crossed the 2000 Mark.
    SELECT *, SCOST*SOLD AS SALE_VALUE FROM SOFTWARE WHERE SCOST*SOLD > 2000 ORDER BY SALE_VALUE DESC

-- 3. Who are the Programmers who celebrate their Birthdays during the Current Month?
    SELECT PNAME FROM PROGRAMMER WHERE MONTH(DOB) = MONTH(GETDATE());

-- 4. Display the Cost of Package Developed By each Programmer.
    SELECT P.PNAME, S.TITLE, S.DCOST FROM PROGRAMMER P 
    LEFT JOIN SOFTWARE S ON S.PNAME = P.PNAME
    WHERE S.DEVELOPIN IN (P.PROF1, P.PROF2)

-- 5. Display the sales values of the Packages Developed by each Programmer.
    SELECT P.PNAME, SUM((SCOST*SOLD)) AS SALES_VALUE FROM PROGRAMMER P 
    LEFT JOIN SOFTWARE S ON S.PNAME = P.PNAME
    WHERE S.DEVELOPIN IN (P.PROF1, P.PROF2)
    GROUP BY P.PNAME

-- 6. Display the Number of Packages sold by Each Programmer.
    SELECT P.PNAME, SUM(SOLD) AS PACKAGES_SOLD FROM PROGRAMMER P 
    LEFT JOIN SOFTWARE S ON S.PNAME = P.PNAME
    WHERE S.DEVELOPIN IN (P.PROF1, P.PROF2)
    GROUP BY P.PNAME
    ORDER BY PACKAGES_SOLD

-- 7. Display each programmerâ€™s name, costliest and cheapest Packages Developed by him or her.
    
    -- PENDING
    SELECT P.PNAME, MIN(DCOST) AS CHEPEST_PKG, MAX(DCOST) AS COSTLIEST_PKG FROM PROGRAMMER P 
    LEFT JOIN SOFTWARE S ON S.PNAME = P.PNAME
    WHERE S.DEVELOPIN IN (P.PROF1, P.PROF2)
    GROUP BY P.PNAME

-- 8. Display each institute name with the number of Courses, Average Cost per Course.
    SELECT INSTITUTE, 
    COUNT(*) AS NO_OF_COURSES, 
    AVG(COURSE_FEE) AS AVG_COURSE_FEE FROM studies
    GROUP BY INSTITUTE

-- 9. Display each institute Name with Number of Students.
    SELECT INSTITUTE, 
    COUNT(*) AS NO_OF_STUDENTS FROM studies
    GROUP BY INSTITUTE

-- 10. List the programmers (form the software table) and the institutes they studied.
    SELECT DISTINCT S.PNAME AS PGMR, ST.INSTITUTE AS INSTITUTE FROM SOFTWARE S 
    LEFT JOIN studies ST ON S.PNAME = ST.PNAME

-- 11. How many packages were developed by students, who studied in institute that charge the lowest course fee?
    SELECT COUNT(*) AS PKGS_DEVELOPED FROM SOFTWARE S
    INNER JOIN studies ST ON ST.PNAME = S.PNAME
    WHERE ST.COURSE = S.DEVELOPIN
    AND ST.INSTITUTE = (SELECT MIN(COURSE_FEE) FROM studies)

-- 12. What is the AVG salary for those whose software sales is more than 50,000/-.
    SELECT AVG(P.SALARY) AS AVG_SALARY FROM PROGRAMMER P
    INNER JOIN SOFTWARE S ON S.PNAME = P.PNAME
    WHERE S.DEVELOPIN IN (P.PROF1, P.PROF2)
    AND (S.SCOST*S.SOLD) > 50000

-- 13. Which language listed in prof1, prof2 has not been used to develop any package.

    WITH P_LANGUAGE AS
    (SELECT PROF1 AS PROF FROM PROGRAMMER
    UNION
    SELECT PROF2 AS PROF FROM PROGRAMMER)
    SELECT P_LANGUAGE.PROF AS NOT_USED_LANGUAGE FROM P_LANGUAGE 
    LEFT JOIN SOFTWARE S ON S.DEVELOPIN = P_LANGUAGE.PROF
    WHERE S.TITLE IS NULL

-- 14. Display the total sales value of the software, institute wise.
    SELECT ST.INSTITUTE, COALESCE(SUM(S.SCOST*S.SOLD), 0) AS SALES_VALUE FROM studies ST
    LEFT JOIN SOFTWARE S ON S.DEVELOPIN = ST.COURSE
    GROUP BY ST.INSTITUTE

-- 15. Display the details of the Software Developed in C By female programmers of Pragathi.
    SELECT S.TITLE FROM SOFTWARE S
    INNER JOIN PROGRAMMER P ON P.PNAME = S.PNAME
    INNER JOIN studies ST ON ST.PNAME = P.PNAME
    WHERE P.GENDER = 'F'
    AND S.DEVELOPIN IN (P.PROF1, P.PROF2)
    AND S.DEVELOPIN = 'C'
    AND ST.INSTITUTE = 'PGRAGATHI'

-- 16. Display the details of the packages developed in Pascal by the Female Programmers.
    SELECT S.* FROM SOFTWARE S
    INNER JOIN PROGRAMMER P ON P.PNAME = S.PNAME
    WHERE P.GENDER = 'F'
    AND S.DEVELOPIN IN (P.PROF1, P.PROF2)
    AND S.DEVELOPIN = 'PASCAL'

-- 17. Which language has been stated as the proficiency by most of the Programmers?
    WITH P_LANGUAGE AS
    (SELECT PROF1 AS PROF FROM PROGRAMMER
    UNION ALL
    SELECT PROF2 AS PROF FROM PROGRAMMER)
    SELECT TOP 1 PROF, COUNT(*) AS PROFICINET_PROGRMERS FROM P_LANGUAGE
    GROUP BY PROF 
    ORDER BY PROFICINET_PROGRMERS DESC;

-- 18. Who is the Author of the Costliest Package?
    SELECT PNAME AS AUTHOR FROM SOFTWARE 
    WHERE SCOST = (SELECT MAX(S.SCOST) FROM SOFTWARE S WHERE S.SCOST > S.DCOST)

-- 19. Which package has the Highest Development cost?
    SELECT TITLE AS HIGH_DEVELOPMENT_COST_PACKAGE FROM SOFTWARE 
    WHERE DCOST = (SELECT MAX(S.DCOST) FROM SOFTWARE S)

    SELECT TOP 1 TITLE AS HIGH_DEVELOPMENT_COST_PACKAGE FROM SOFTWARE ORDER BY DCOST DESC

-- 20. Who is the Highest Paid Female COBOL Programmer?
    SELECT PNAME AS HIHGEST_PAID_FEMALE_PROGRAMMER FROM PROGRAMMER WHERE SALARY = (
        SELECT MAX(SALARY) FROM PROGRAMMER WHERE GENDER = 'F'
    )

    SELECT TOP 1 PNAME AS HIHGEST_PAID_FEMALE_PROGRAMMER FROM PROGRAMMER WHERE GENDER = 'F' ORDER BY SALARY DESC

-- 21. Display the Name of Programmers and Their Packages.
    SELECT P.PNAME, STRING_AGG(S.TITLE, ', ') AS PACKAGES_DEVELPED FROM PROGRAMMER P
    INNER JOIN SOFTWARE S ON S.PNAME = P.PNAME
    GROUP BY P.PNAME;

-- 22. Display the Number of Packages in Each Language Except C and C++.
    
    WITH P_LANG AS
    (SELECT PROF1 AS PROF FROM PROGRAMMER
    UNION
    SELECT PROF2 AS PROF FROM PROGRAMMER)
    SELECT P_LANG.PROF AS PROGRAMMING_LANGUAGE, COUNT(*) AS PACKAGES_DEVELOPED FROM P_LANG
    LEFT JOIN SOFTWARE ON DEVELOPIN = P_LANG.PROF
    WHERE DEVELOPIN NOT IN ('C', 'C++', 'CPP')
    GROUP BY P_LANG.PROF

-- 23. Display AVG Difference between SCOST, DCOST for Each Package.
    SELECT TITLE, (SUM(SCOST)-SUM(DCOST))/2 FROM SOFTWARE
    WHERE SOLD > 0
    GROUP BY TITLE
    SELECT * FROM SOFTWARE

-- 24. Display the total SCOST, DCOST and amount to Be Recovered for each Programmer for Those Whose Cost has not yet been Recovered.
    SELECT PNAME, 
    SUM(SCOST*SOLD) AS TOTAL_SCOST,
    SUM(DCOST) AS TOTAL_DCOST,
    SUM(DCOST - (SCOST*SOLD)) AS AMOUNT_TO_BE_RECOVERED FROM SOFTWARE
    GROUP BY PNAME
    HAVING SUM(DCOST - (SCOST*SOLD)) > 0
    ORDER BY AMOUNT_TO_BE_RECOVERED

-- 25. Who is the Highest Paid C Programmers?
    SELECT PNAME AS [Highest Paid C Programmers] FROM PROGRAMMER 
    WHERE (PROF1 = 'C' OR PROF2 = 'C') 
    AND SALARY = (SELECT MAX(SALARY) FROM PROGRAMMER WHERE (PROF1 = 'C' OR PROF2 = 'C'))

-- 26. Who is the Highest Paid Female COBOL Programmer?
    SELECT PNAME AS [Highest Paid Female COBOL Programmer] FROM PROGRAMMER 
    WHERE (PROF1 = 'COBOL' OR PROF2 = 'COBOL') 
    AND GENDER = 'F'
    AND SALARY = (SELECT MAX(SALARY) FROM PROGRAMMER WHERE (PROF1 = 'COBOL' OR PROF2 = 'COBOL'))
